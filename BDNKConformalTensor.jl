module BDNKConformalTensor
tt_zeroth_order(v0::Float64, ε0::Float64) = -0.3333333333333333*((3 + v0^2)*ε0)/(-1 + v0^2)

xx_zeroth_order(v0::Float64, ε0::Float64) = ((1 + 3*v0^2)*ε0)/(3 - 3*v0^2)

tt_first_order(v0m::Float64, v0::Float64, v0p::Float64, ε0m::Float64, ε0::Float64, ε0p::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = (-6*h*E0*(-1 + v0^2)*(3*χ0 + (2*λ0 + χ0)*v0^2) + 4*(4*η0 - 6*λ0 -
χ0)*v0^2*(v0m - v0p)*ε0 + 12*χ0*(-v0m + v0p)*ε0 + 3*χ0*v0^5*(ε0m - ε0p) + v0^3*(6*(λ0 + χ0)*ε0m + 8*h*(-4*η0 + χ0)*V0*ε0 - 6*(λ0 + χ0)*ε0p) + v0*(-3*(2*λ0 + 3*χ0)*ε0m + 24*h*(2*λ0 + χ0)*V0*ε0 + 3*(2*λ0 +
3*χ0)*ε0p))/(24.0*h*(1 - v0^2)^2.5*ε0^0.25)

xx_first_order(v0m::Float64, v0::Float64, v0p::Float64, ε0m::Float64, ε0::Float64, ε0p::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = (-6*h*E0*(-1 + v0^2)*(χ0 + (2*λ0 + 3*χ0)*v0^2) + 4*(4*η0 - χ0)*(v0m -
v0p)*ε0 - 12*(2*λ0 + χ0)*v0^2*(v0m - v0p)*ε0 + 9*χ0*v0^5*(ε0m - ε0p) + 6*v0^3*((λ0 - χ0)*ε0m + 4*h*χ0*V0*ε0 + (-λ0 + χ0)*ε0p) + v0*(-3*(2*λ0 + χ0)*ε0m + 8*h*(-4*η0 + 6*λ0 + χ0)*V0*ε0 + 3*(2*λ0 +
χ0)*ε0p))/(24.0*h*(1 - v0^2)^2.5*ε0^0.25)

four_velocity_inner_prod(v0m::Float64, v0::Float64, v0p::Float64, ε0m::Float64, ε0::Float64, ε0p::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.125*(4*χ0*(v0m - v0p - 2*h*v0*V0)*ε0 - 8*h*sqrt(1 -
v0^2)*ε0^1.25 + 8*h*v0^2*sqrt(1 - v0^2)*ε0^1.25 + 3*χ0*(-1 + v0^2)*(2*h*E0 + v0*(-ε0m + ε0p)))/(h*(1 - v0^2)^1.5*ε0^0.25)

# left boundary
module Left

tt_first_order(v0::Float64, v0p1::Float64, v0p2::Float64, ε0::Float64, ε0p1::Float64, ε0p2::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = (-6*h*E0*(-1 + v0^2)*(3*χ0 +
(2*λ0 + χ0)*v0^2) + 12*χ0*(4*v0p1 - v0p2)*ε0 - 4*(4*η0 - 6*λ0 - χ0)*v0^2*(4*v0p1 - v0p2)*ε0 + 3*v0*((-3*(2*λ0 + 7*χ0) + 8*h*(2*λ0 + χ0)*V0)*ε0 + (2*λ0 + 3*χ0)*(4*ε0p1 - ε0p2)) + 3*χ0*v0^5*(3*ε0 - 4*ε0p1 + ε0p2) +
v0^3*((6*(8*η0 - 9*λ0 + χ0) + 8*h*(-4*η0 + χ0)*V0)*ε0 + 6*(λ0 + χ0)*(-4*ε0p1 + ε0p2)))/(24.0*h*(1 - v0^2)^2.5*ε0^0.25)

xx_first_order(v0::Float64, v0p1::Float64, v0p2::Float64, ε0::Float64, ε0p1::Float64, ε0p2::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = (-6*h*E0*(-1 + v0^2)*(χ0 +
(2*λ0 + 3*χ0)*v0^2) - 4*(4*η0 - χ0)*(4*v0p1 - v0p2)*ε0 + 12*(2*λ0 + χ0)*v0^2*(4*v0p1 - v0p2)*ε0 - 6*v0^3*((9*(λ0 + χ0) - 4*h*χ0*V0)*ε0 + (λ0 - χ0)*(4*ε0p1 - ε0p2)) + v0*((3*(16*η0 - 6*λ0 - 7*χ0) + 8*h*(-4*η0 +
6*λ0 + χ0)*V0)*ε0 + 3*(2*λ0 + χ0)*(4*ε0p1 - ε0p2)) + 9*χ0*v0^5*(3*ε0 - 4*ε0p1 + ε0p2))/(24.0*h*(1 - v0^2)^2.5*ε0^0.25)

four_velocity_inner_prod(v0::Float64, v0p1::Float64, v0p2::Float64, ε0::Float64, ε0p1::Float64, ε0p2::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.125*(χ0*(-9*v0^3 +
4*(-4*v0p1 + v0p2) + v0*(21 - 8*h*V0))*ε0 - 8*h*sqrt(1 - v0^2)*ε0^1.25 + 8*h*v0^2*sqrt(1 - v0^2)*ε0^1.25 + 3*χ0*(-1 + v0^2)*(2*h*E0 + v0*(4*ε0p1 - ε0p2)))/(h*(1 - v0^2)^1.5*ε0^0.25)

end

module Right

tt_first_order(v0::Float64, v0m1::Float64, v0m2::Float64, ε0::Float64, ε0m1::Float64, ε0m2::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = (6*h*E0*(1 - v0^2)*(3*χ0 +
(2*λ0 + χ0)*v0^2) + 4*(v0m2 - 4*v0m1 + 3*v0)*(3*χ0 + (-4*η0 + 6*λ0 + χ0)*v0^2)*ε0 + 8*h*v0*(3*(2*λ0 + χ0) + (-4*η0 + χ0)*v0^2)*V0*ε0 - 3*v0*(-1 + v0^2)*(2*λ0 + 3*χ0 + χ0*v0^2)*(ε0m2 - 4*ε0m1 + 3*ε0))/(24.0*h*(1 -
v0^2)^2.5*ε0^0.25)

xx_first_order(v0::Float64, v0m1::Float64, v0m2::Float64, ε0::Float64, ε0m1::Float64, ε0m2::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = (3*(-1 + v0^2)*(-2*h*E0*(χ0 +
(2*λ0 + 3*χ0)*v0^2) - v0*(2*λ0 + χ0 + 3*χ0*v0^2)*(ε0m2 - 4*ε0m1)) + (16*v0m1*(4*η0 - χ0 - 3*(2*λ0 + χ0)*v0^2) + 4*v0m2*(-4*η0 + χ0 + 3*(2*λ0 + χ0)*v0^2) + v0*(3*(-16*η0 + 6*λ0 + 7*χ0 + 18*(λ0 + χ0)*v0^2 -
9*χ0*v0^4) + 8*h*(-4*η0 + 6*λ0 + χ0 + 3*χ0*v0^2)*V0))*ε0)/(24.0*h*(1 - v0^2)^2.5*ε0^0.25)

four_velocity_inner_prod(v0::Float64, v0m1::Float64, v0m2::Float64, ε0::Float64, ε0m1::Float64, ε0m2::Float64, V0::Float64, E0::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.125*(3*χ0*(-1 +
v0^2)*(2*h*E0 + v0*(ε0m2 - 4*ε0m1)) + χ0*(-4*v0m2 + 16*v0m1 + v0*(-21 + 9*v0^2 - 8*h*V0))*ε0 - 8*h*sqrt(1 - v0^2)*ε0^1.25 + 8*h*v0^2*sqrt(1 - v0^2)*ε0^1.25)/(h*(1 - v0^2)^1.5*ε0^0.25)

end

end