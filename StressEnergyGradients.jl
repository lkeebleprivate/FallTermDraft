#=

    In this file we write functions for the independent components of the fluid equations of motion: ∇_{a} T^{ab}=0. For the conformal Euler and BDNK systems in (1+1)D,
    there are two nontrivial components: the t and x components. We write functions for each of these for the Euler and BDNK systems discretized using the leapfrog scheme.
    These functions are to be used to evaluate the independent residual of the numerical solutions to chec2.0*k for the correctness of our solutions.

=#

module StressEnergyGradients

#=
    Notation: time level specified by 0, 1, 2. Space level specified by m, "", p. That is, v0m denotes v^{n-1}_{j-1}, v0 denotes v^{n-1}_{j},
    v0p denotes v^{n-1}_{j+1}, v1m denotes v^{n}_{j-1}, v1 denotes v^{n}_{j}, v1p denotes v^{n}_{j+1} etc.
=#

module Euler

stress_energy_gradient_t(v0::Float64, ε0::Float64, v1m::Float64, v1::Float64, v1p::Float64, ε1m::Float64, ε1::Float64, ε1p::Float64, v2::Float64, ε2::Float64, k::Float64, h::Float64) =
-0.3333333333333333*(2*(2.0*k*(1 + v1^2)*(v1m - v1p) + 4*h*v1*(v0 - v2))*ε1 + (1 - v1^2)*(2*2.0*k*v1*(ε1m - ε1p) + h*(3 + v1^2)*(ε0 - ε2)))/(h*2.0*k*(-1 + v1^2)^2)

stress_energy_gradient_x(v0::Float64, ε0::Float64, v1m::Float64, v1::Float64, v1p::Float64, ε1m::Float64, ε1::Float64, ε1p::Float64, v2::Float64, ε2::Float64, k::Float64, h::Float64) =
(-(2.0*k*ε1m) + 8*h*(-v0 + v2)*ε1 + 3*2.0*k*v1^4*(ε1m - ε1p) + 2.0*k*ε1p + v1^2*(-2*2.0*k*ε1m + 8*h*(-v0 + v2)*ε1 + 2*2.0*k*ε1p) + 8*h*v1^3*(ε0 - ε2) + 8*v1*(-(h*ε0) + 2.0*k*(-v1m + v1p)*ε1 +
h*ε2))/(6.0*h*2.0*k*(-1 + v1^2)^2)

end


module BDNK

stress_energy_gradient_t(v1m::Float64, v1::Float64, v1p::Float64, ε1m::Float64, ε1::Float64, ε1p::Float64, V0::Float64, V1m::Float64, V1::Float64, V1p::Float64, E0::Float64,
E1m::Float64, E1::Float64, E1p::Float64, V2::Float64, E2::Float64, k::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.005208333333333333*(36*h^2*2.0*k*χ0*E1^2 +
24*h^2*2.0*k*λ0*E1^2*v1^2 - 60*h^2*2.0*k*χ0*E1^2*v1^2 - 48*h^2*2.0*k*λ0*E1^2*v1^4 + 12*h^2*2.0*k*χ0*E1^2*v1^4 + 24*h^2*2.0*k*λ0*E1^2*v1^6 + 12*h^2*2.0*k*χ0*E1^2*v1^6 -
192*h^2*2.0*k*E1*sqrt(1 - v1^2)*ε1^1.25 + 320*h^2*2.0*k*E1*v1^2*sqrt(1 - v1^2)*ε1^1.25 - 64*h^2*2.0*k*E1*v1^4*sqrt(1 - v1^2)*ε1^1.25 - 64*h^2*2.0*k*E1*v1^6*sqrt(1 - v1^2)*ε1^1.25 +
16*(2.0*k*(4*η0 - 3*λ0 - 4*χ0 + (16*η0 - 21*λ0 - 16*χ0)*v1^2 - 6*λ0*v1^4)*(v1m - v1p)^2 -    2*h*2.0*k*v1*(16*η0 - 33*λ0 - 25*χ0 + 3*(8*η0 - 9*λ0 - 5*χ0)*v1^2)*(v1m - v1p)*V1 -
4*h^2*2.0*k*(3*(2*λ0 + χ0) + 3*(-4*η0 + 8*λ0 + 5*χ0)*v1^2 + 2*(-4*η0 + χ0)*v1^4)*V1^2 +    2*(1 - v1^2)*(h*2.0*k*(3*(λ0 + χ0) + (-8*η0 + 9*λ0 + 5*χ0)*v1^2)*(V1m - V1p) +
2*v1*(2.0*k*(4*η0 - 3*λ0 - 4*χ0 - 3*λ0*v1^2)*(v1m - 2*v1 + v1p) +  h^2*(3*(2*λ0 + χ0) + (-4*η0 + χ0)*v1^2)*(V0 - V2))))*ε1^2 + 128*h*2.0*k*sqrt(1 - v1^2)*(v1m - v1p)*ε1^2.25 +
128*h*2.0*k*v1^4*sqrt(1 - v1^2)*(-v1m + v1p)*ε1^2.25 - 512*h^2*2.0*k*v1*sqrt(1 - v1^2)*V1*ε1^2.25 + 512*h^2*2.0*k*v1^3*sqrt(1 - v1^2)*V1*ε1^2.25 + 30*h*2.0*k*λ0*E1*v1^3*(ε1m - ε1p) +
78*h*2.0*k*χ0*E1*v1^3*(ε1m - ε1p) + 128*h*2.0*k*v1*sqrt(1 - v1^2)*ε1^1.25*(ε1m - ε1p) + 128*h*2.0*k*v1^5*sqrt(1 - v1^2)*ε1^1.25*(ε1m - ε1p) + 3*2.0*k*λ0*(ε1m - ε1p)^2 -
3*2.0*k*λ0*v1^2*(ε1m - ε1p)^2 + 12*2.0*k*χ0*v1^2*(ε1m - ε1p)^2 - 3*2.0*k*λ0*v1^4*(ε1m - ε1p)^2 - 24*2.0*k*χ0*v1^4*(ε1m - ε1p)^2 + 3*2.0*k*λ0*v1^6*(ε1m - ε1p)^2 + 12*2.0*k*χ0*v1^6*(ε1m - ε1p)^2 +
18*h*2.0*k*λ0*E1*v1*(-ε1m + ε1p) + 42*h*2.0*k*χ0*E1*v1*(-ε1m + ε1p) + 6*h*2.0*k*λ0*E1*v1^5*(-ε1m + ε1p) + 30*h*2.0*k*χ0*E1*v1^5*(-ε1m + ε1p) + 6*h*2.0*k*λ0*E1*v1^7*(-ε1m + ε1p) +
6*h*2.0*k*χ0*E1*v1^7*(-ε1m + ε1p) + 256*h*2.0*k*v1^3*sqrt(1 - v1^2)*ε1^1.25*(-ε1m + ε1p) + 24*(1 - v1^2)*ε1*(6*h^2*χ0*(E0 - E2) - h*2.0*k*(λ0 + χ0)*(E1m - E1p)*v1^5 +
h*2.0*k*E1*((λ0 + 7*χ0 + (-4*η0 + 11*λ0 + 9*χ0)*v1^2)*(v1m - v1p) - 4*h*v1*(5*λ0 + 7*χ0 + (-2*η0 + λ0 + χ0)*v1^2)*V1) +    2.0*k*v1*(h*(3*λ0 + 7*χ0)*(E1m - E1p) +
2*(η0 - 2*λ0 - 3*χ0)*(v1m - v1p)*(ε1m - ε1p)) -    2*2.0*k*v1^3*(h*(λ0 + 3*χ0)*(E1m - E1p) + (λ0 + χ0)*(v1m - v1p)*(ε1m - ε1p)) +    5*h*2.0*k*λ0*V1*(ε1m - ε1p) +
3*h*2.0*k*χ0*V1*(ε1m - ε1p) - 2*2.0*k*λ0*(ε1m - 2*ε1 + ε1p) +    v1^2*(4*h^2*(λ0 - χ0)*(E0 - E2) - h*2.0*k*(4*η0 - 7*λ0 - 13*χ0)*V1*(ε1m - ε1p) -
8*2.0*k*χ0*(ε1m - 2*ε1 + ε1p)) - 2*v1^4*    (h^2*(2*λ0 + χ0)*(E0 - E2) - 2.0*k*(λ0 + 4*χ0)*(ε1m - 2*ε1 + ε1p))))/(h^2*2.0*k*(1 - v1^2)^3.5*ε1^1.25)

stress_energy_gradient_x(v1m::Float64, v1::Float64, v1p::Float64, ε1m::Float64, ε1::Float64, ε1p::Float64, V0::Float64, V1m::Float64, V1::Float64, V1p::Float64, E0::Float64,
E1m::Float64, E1::Float64, E1p::Float64, V2::Float64, E2::Float64, k::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.005208333333333333*(12*h^2*2.0*k*E1^2*v1*(-1 +
v1^2)^2*(λ0 + 4*χ0 + λ0*v1^2) - 2*h*2.0*k*E1*(1 - v1^2)*(12*v1*(4*η0 - 7*λ0 - 13*χ0 - (5*λ0 + 3*χ0)*v1^2)*(v1m - v1p)*ε1 +    96*h*(λ0 + χ0 + (-η0 + 2*λ0 +
3*χ0)*v1^2)*V1*ε1 + 128*h*v1*sqrt(1 - v1^2)*ε1^1.25 -    128*h*v1^3*sqrt(1 - v1^2)*ε1^1.25 + 3*(1 - v1^2)*(λ0 + χ0 + (3*λ0 + 7*χ0)*v1^2)*(ε1m - ε1p)) +
24*h*2.0*k*v1^6*ε1*((3*λ0 + 7*χ0)*(E1m - E1p) + 4*sqrt(1 - v1^2)*ε1^0.25*(ε1m - ε1p)) + 8*v1^2*ε1*(3*h*2.0*k*(λ0 + 5*χ0)*(E1m - E1p) -    16*(2.0*k*(2*η0 + 3*λ0 + χ0)*(v1m - 2*v1 +
v1p) + 2*h^2*(η0 - χ0)*(V0 - V2))*ε1 -    2*2.0*k*(v1m - v1p)*(2*h*(32*η0 - 45*λ0 - 29*χ0)*V1*ε1 + 3*(η0 + 2*λ0 + 3*χ0)*(ε1m - ε1p)) +    4*h*2.0*k*sqrt(1 -
v1^2)*ε1^0.25*(ε1m - ε1p)) + 8*ε1*(3*h*2.0*k*(λ0 + χ0)*(E1m - E1p) +    8*(2.0*k*(4*η0 - χ0)*(v1m - 2*v1 + v1p) + 3*h^2*λ0*(V0 - V2))*ε1 -    4*h*2.0*k*V1*((8*η0 - 9*λ0 -
5*χ0)*(v1m - v1p) + 8*h*sqrt(1 - v1^2)*ε1^0.25)*ε1 +    3*2.0*k*(2*η0 - λ0 - χ0)*(v1m - v1p)*(ε1m - ε1p) + 4*h*2.0*k*sqrt(1 - v1^2)*ε1^0.25*(ε1m - ε1p)) - 8*v1^4*ε1*(3*h*2.0*k*(5*λ0 +
13*χ0)*(E1m - E1p) -    8*(3*2.0*k*(2*λ0 + χ0)*(v1m - 2*v1 + v1p) + h^2*(4*η0 - 3*λ0 - 4*χ0)*(V0 - V2))*ε1 -    8*h*2.0*k*V1*(3*(λ0 + χ0)*(v1m - v1p) + 4*h*sqrt(1 - v1^2)*ε1^0.25)*ε1 -
3*2.0*k*(5*λ0 + 7*χ0)*(v1m - v1p)*(ε1m - ε1p) + 20*h*2.0*k*sqrt(1 - v1^2)*ε1^0.25*(ε1m - ε1p)) - 3*v1^5*(32*h*2.0*k*(λ0 + χ0)*(V1m - V1p)*ε1^2 - 2.0*k*(2*λ0 - 5*χ0)*(ε1m - ε1p)^2 +
8*ε1*(2*h^2*(λ0 - 4*χ0)*(E0 - E2) + h*2.0*k*(λ0 + 7*χ0)*V1*(ε1m - ε1p) +       2*2.0*k*(2*λ0 - 5*χ0)*(ε1m - 2*ε1 + ε1p))) + v1^3*(192*h^2*2.0*k*(4*η0 - 3*λ0 - 4*χ0)*V1^2*ε1^2 -
16*2.0*k*(9*(2*λ0 + χ0)*(v1m - v1p)^2 - 4*h*(4*η0 - 3*λ0 - χ0)*(V1m - V1p))*ε1^2 +    256*h*2.0*k*sqrt(1 - v1^2)*(-v1m + v1p)*ε1^2.25 + 48*h*2.0*k*(2*η0 - 5*λ0 - χ0)*V1*ε1*(ε1m - ε1p) -
3*2.0*k*(4*λ0 - χ0)*(ε1m - ε1p)^2 - 48*ε1*    (h^2*(λ0 + 8*χ0)*(E0 - E2) - 2.0*k*(4*λ0 - χ0)*(ε1m - 2*ε1 + ε1p))) + 3*v1^7*(3*2.0*k*χ0*(ε1m - ε1p)^2 + 16*ε1*(h^2*λ0*(E0 - E2) -
3*2.0*k*χ0*(ε1m - 2*ε1 + ε1p))) + v1*(64*h^2*2.0*k*(8*η0 - 21*λ0 - 8*χ0)*V1^2*ε1^2 +    16*2.0*k*((20*η0 - 12*λ0 - 11*χ0)*(v1m - v1p)^2 - 2*h*(8*η0 - 9*λ0 - 5*χ0)*(V1m - V1p))*ε1^2 +
256*h*2.0*k*sqrt(1 - v1^2)*(v1m - v1p)*ε1^2.25 - 24*h*2.0*k*(4*η0 - 11*λ0 - 9*χ0)*V1*ε1*(ε1m - ε1p) +    3*2.0*k*(2*λ0 + χ0)*(ε1m - ε1p)^2 + 48*ε1*    (h^2*(λ0 + 4*χ0)*(E0 - E2) -
2.0*k*(2*λ0 + χ0)*(ε1m - 2*ε1 + ε1p))))/(h^2*2.0*k*(1 - v1^2)^3.5*ε1^1.25)

module Left

stress_energy_gradient_t(v1::Float64, v1p1::Float64, v1p2::Float64, v1p3::Float64, ε1::Float64, ε1p1::Float64, ε1p2::Float64, ε1p3::Float64, V0::Float64, V1::Float64, V1p1::Float64, V1p2::Float64, E0::Float64,
E1::Float64, E1p1::Float64, E1p2::Float64, V2::Float64, E2::Float64, k::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.005208333333333333*(36*h^2*k*χ0*E1^2 + 24*h^2*k*λ0*E1^2*v1^2 - 60*h^2*k*χ0*E1^2*v1^2 - 48*h^2*k*λ0*E1^2*v1^4 + 12*h^2*k*χ0*E1^2*v1^4 + 24*h^2*k*λ0*E1^2*v1^6 + 12*h^2*k*χ0*E1^2*v1^6 - 192*h^2*k*E1*sqrt(1 - v1^2)*ε1^1.25 + 320*h^2*k*E1*v1^2*sqrt(1 - v1^2)*ε1^1.25 - 64*h^2*k*E1*v1^4*sqrt(1 - v1^2)*ε1^1.25 - 64*h^2*k*E1*v1^6*sqrt(1 - v1^2)*ε1^1.25 + 16*(k*(4*η0 - 3*λ0 - 4*χ0 + (16*η0 - 21*λ0 - 16*χ0)*v1^2 - 6*λ0*v1^4)*(3*v1 - 4*v1p1 + v1p2)^2 - 2*h*k*v1*(16*η0 - 33*λ0 - 25*χ0 + 3*(8*η0 - 9*λ0 - 5*χ0)*v1^2)*(3*v1 - 4*v1p1 + v1p2)*V1 - 4*h^2*k*(3*(2*λ0 + χ0) + 3*(-4*η0 + 8*λ0 + 5*χ0)*v1^2 + 2*(-4*η0 + χ0)*v1^4)*V1^2 + 2*(1 - v1^2)*(h*k*(3*(λ0 + χ0) + (-8*η0 + 9*λ0 + 5*χ0)*v1^2)*(3*V1 - 4*V1p1 + V1p2) + v1*(2*k*(4*η0 - 3*λ0 - 4*χ0 - 3*λ0*v1^2)*(2*v1 - 5*v1p1 + 4*v1p2 - v1p3) + h^2*(3*(2*λ0 + χ0) + (-4*η0 + χ0)*v1^2)*(V0 - V2))))*ε1^2 + 128*h*k*sqrt(1 - v1^2)*(3*v1 - 4*v1p1 + v1p2)*ε1^2.25 - 128*h*k*v1^4*sqrt(1 - v1^2)*(3*v1 - 4*v1p1 + v1p2)*ε1^2.25 - 512*h^2*k*v1*sqrt(1 - v1^2)*V1*ε1^2.25 + 512*h^2*k*v1^3*sqrt(1 - v1^2)*V1*ε1^2.25 - 18*h*k*λ0*E1*v1*(3*ε1 - 4*ε1p1 + ε1p2) - 42*h*k*χ0*E1*v1*(3*ε1 - 4*ε1p1 + ε1p2) + 30*h*k*λ0*E1*v1^3*(3*ε1 - 4*ε1p1 + ε1p2) + 78*h*k*χ0*E1*v1^3*(3*ε1 - 4*ε1p1 + ε1p2) - 6*h*k*λ0*E1*v1^5*(3*ε1 - 4*ε1p1 + ε1p2) - 30*h*k*χ0*E1*v1^5*(3*ε1 - 4*ε1p1 + ε1p2) - 6*h*k*λ0*E1*v1^7*(3*ε1 - 4*ε1p1 + ε1p2) - 6*h*k*χ0*E1*v1^7*(3*ε1 - 4*ε1p1 + ε1p2) + 128*h*k*v1*sqrt(1 - v1^2)*ε1^1.25*(3*ε1 - 4*ε1p1 + ε1p2) - 256*h*k*v1^3*sqrt(1 - v1^2)*ε1^1.25*(3*ε1 - 4*ε1p1 + ε1p2) + 128*h*k*v1^5*sqrt(1 - v1^2)*ε1^1.25*(3*ε1 - 4*ε1p1 + ε1p2) + 3*k*λ0*(3*ε1 - 4*ε1p1 + ε1p2)^2 - 3*k*λ0*v1^2*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 12*k*χ0*v1^2*(3*ε1 - 4*ε1p1 + ε1p2)^2 - 3*k*λ0*v1^4*(3*ε1 - 4*ε1p1 + ε1p2)^2 - 24*k*χ0*v1^4*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 3*k*λ0*v1^6*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 12*k*χ0*v1^6*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 24*(1 - v1^2)*ε1*(3*h^2*χ0*(E0 - E2) - h*k*(λ0 + χ0)*(3*E1 - 4*E1p1 + E1p2)*v1^5 + h*k*E1*((λ0 + 7*χ0 + (-4*η0 + 11*λ0 + 9*χ0)*v1^2)*(3*v1 - 4*v1p1 + v1p2) - 4*h*v1*(5*λ0 + 7*χ0 + (-2*η0 + λ0 + χ0)*v1^2)*V1) + 5*h*k*λ0*V1*(3*ε1 - 4*ε1p1 + ε1p2) + 3*h*k*χ0*V1*(3*ε1 - 4*ε1p1 + ε1p2) + k*v1*(h*(3*λ0 + 7*χ0)*(3*E1 - 4*E1p1 + E1p2) + 2*(η0 - 2*λ0 - 3*χ0)*(3*v1 - 4*v1p1 + v1p2)*(3*ε1 - 4*ε1p1 + ε1p2)) - 2*k*v1^3*(h*(λ0 + 3*χ0)*(3*E1 - 4*E1p1 + E1p2) + (λ0 + χ0)*(3*v1 - 4*v1p1 + v1p2)*(3*ε1 - 4*ε1p1 + ε1p2)) + v1^2*(2*h^2*(λ0 - χ0)*(E0 - E2) - h*k*(4*η0 - 7*λ0 - 13*χ0)*V1*(3*ε1 - 4*ε1p1 + ε1p2) - 8*k*χ0*(2*ε1 - 5*ε1p1 + 4*ε1p2 - ε1p3)) - v1^4*(h^2*(2*λ0 + χ0)*(E0 - E2) - 2*k*(λ0 + 4*χ0)*(2*ε1 - 5*ε1p1 + 4*ε1p2 - ε1p3)) - 2*k*λ0*(2*ε1 - 5*ε1p1 + 4*ε1p2 - ε1p3)))/(h^2*k*(1 - v1^2)^3.5*ε1^1.25)


stress_energy_gradient_x(v1::Float64, v1p1::Float64, v1p2::Float64, v1p3::Float64, ε1::Float64, ε1p1::Float64, ε1p2::Float64, ε1p3::Float64, V0::Float64, V1::Float64, V1p1::Float64, V1p2::Float64, E0::Float64,
E1::Float64, E1p1::Float64, E1p2::Float64, V2::Float64, E2::Float64, k::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.005208333333333333*(12*h^2*k*E1^2*v1*(-1 + v1^2)^2*(λ0 + 4*χ0 + λ0*v1^2) - 2*h*k*E1*(1 - v1^2)*(12*v1*(4*η0 - 7*λ0 - 13*χ0 - (5*λ0 + 3*χ0)*v1^2)*(3*v1 - 4*v1p1 + v1p2)*ε1 + 96*h*(λ0 + χ0 + (-η0 + 2*λ0 + 3*χ0)*v1^2)*V1*ε1 + 128*h*v1*sqrt(1 - v1^2)*ε1^1.25 - 128*h*v1^3*sqrt(1 - v1^2)*ε1^1.25 + 3*(1 - v1^2)*(λ0 + χ0 + (3*λ0 + 7*χ0)*v1^2)*(3*ε1 - 4*ε1p1 + ε1p2)) + 24*h*k*v1^6*ε1*((3*λ0 + 7*χ0)*(3*E1 - 4*E1p1 + E1p2) + 4*sqrt(1 - v1^2)*ε1^0.25*(3*ε1 - 4*ε1p1 + ε1p2)) + 8*ε1*(3*h*k*(λ0 + χ0)*(3*E1 - 4*E1p1 + E1p2) + 4*(2*k*(4*η0 - χ0)*(2*v1 - 5*v1p1 + 4*v1p2 - v1p3) + 3*h^2*λ0*(V0 - V2))*ε1 - 4*h*k*V1*((8*η0 - 9*λ0 - 5*χ0)*(3*v1 - 4*v1p1 + v1p2) + 8*h*sqrt(1 - v1^2)*ε1^0.25)*ε1 + 3*k*(2*η0 - λ0 - χ0)*(3*v1 - 4*v1p1 + v1p2)*(3*ε1 - 4*ε1p1 + ε1p2) + 4*h*k*sqrt(1 - v1^2)*ε1^0.25*(3*ε1 - 4*ε1p1 + ε1p2)) - 8*v1^4*ε1*(3*h*k*(5*λ0 + 13*χ0)*(3*E1 - 4*E1p1 + E1p2) - 4*(6*k*(2*λ0 + χ0)*(2*v1 - 5*v1p1 + 4*v1p2 - v1p3) + h^2*(4*η0 - 3*λ0 - 4*χ0)*(V0 - V2))*ε1 - 8*h*k*V1*(3*(λ0 + χ0)*(3*v1 - 4*v1p1 + v1p2) + 4*h*sqrt(1 - v1^2)*ε1^0.25)*ε1 - 3*k*(5*λ0 + 7*χ0)*(3*v1 - 4*v1p1 + v1p2)*(3*ε1 - 4*ε1p1 + ε1p2) + 20*h*k*sqrt(1 - v1^2)*ε1^0.25*(3*ε1 - 4*ε1p1 + ε1p2)) + 8*v1^2*ε1*(3*h*k*(λ0 + 5*χ0)*(3*E1 - 4*E1p1 + E1p2) - 16*(k*(2*η0 + 3*λ0 + χ0)*(2*v1 - 5*v1p1 + 4*v1p2 - v1p3) + h^2*(η0 - χ0)*(V0 - V2))*ε1 + 4*h*k*sqrt(1 - v1^2)*ε1^0.25*(3*ε1 - 4*ε1p1 + ε1p2) - 2*k*(3*v1 - 4*v1p1 + v1p2)*(2*h*(32*η0 - 45*λ0 - 29*χ0)*V1*ε1 + 3*(η0 + 2*λ0 + 3*χ0)*(3*ε1 - 4*ε1p1 + ε1p2))) - 3*v1^5*(32*h*k*(λ0 + χ0)*(3*V1 - 4*V1p1 + V1p2)*ε1^2 - k*(2*λ0 - 5*χ0)*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 8*ε1*(h^2*(λ0 - 4*χ0)*(E0 - E2) + h*k*(λ0 + 7*χ0)*V1*(3*ε1 - 4*ε1p1 + ε1p2) + 2*k*(2*λ0 - 5*χ0)*(2*ε1 - 5*ε1p1 + 4*ε1p2 - ε1p3))) + v1^3*(192*h^2*k*(4*η0 - 3*λ0 - 4*χ0)*V1^2*ε1^2 - 16*k*(9*(2*λ0 + χ0)*(3*v1 - 4*v1p1 + v1p2)^2 - 4*h*(4*η0 - 3*λ0 - χ0)*(3*V1 - 4*V1p1 + V1p2))*ε1^2 - 256*h*k*sqrt(1 - v1^2)*(3*v1 - 4*v1p1 + v1p2)*ε1^2.25 + 48*h*k*(2*η0 - 5*λ0 - χ0)*V1*ε1*(3*ε1 - 4*ε1p1 + ε1p2) - 3*k*(4*λ0 - χ0)*(3*ε1 - 4*ε1p1 + ε1p2)^2 - 24*ε1*(h^2*(λ0 + 8*χ0)*(E0 - E2) - 2*k*(4*λ0 - χ0)*(2*ε1 - 5*ε1p1 + 4*ε1p2 - ε1p3))) + v1*(64*h^2*k*(8*η0 - 21*λ0 - 8*χ0)*V1^2*ε1^2 + 16*k*((20*η0 - 12*λ0 - 11*χ0)*(3*v1 - 4*v1p1 + v1p2)^2 - 2*h*(8*η0 - 9*λ0 - 5*χ0)*(3*V1 - 4*V1p1 + V1p2))*ε1^2 + 256*h*k*sqrt(1 - v1^2)*(3*v1 - 4*v1p1 + v1p2)*ε1^2.25 - 24*h*k*(4*η0 - 11*λ0 - 9*χ0)*V1*ε1*(3*ε1 - 4*ε1p1 + ε1p2) + 3*k*(2*λ0 + χ0)*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 24*ε1*(h^2*(λ0 + 4*χ0)*(E0 - E2) - 2*k*(2*λ0 + χ0)*(2*ε1 - 5*ε1p1 + 4*ε1p2 - ε1p3))) + 3*v1^7*(3*k*χ0*(3*ε1 - 4*ε1p1 + ε1p2)^2 + 8*ε1*(h^2*λ0*E0 - h^2*λ0*E2 + 6*k*χ0*(-2*ε1 + 5*ε1p1 - 4*ε1p2 + ε1p3))))/(h^2*k*(1 - v1^2)^3.5*ε1^1.25)


end

module Right

stress_energy_gradient_t(v1::Float64, v1m1::Float64, v1m2::Float64, v1m3::Float64, ε1::Float64, ε1m1::Float64, ε1m2::Float64, ε1m3::Float64, V0::Float64, V1::Float64, V1m1::Float64, V1m2::Float64, E0::Float64,
E1::Float64, E1m1::Float64, E1m2::Float64, V2::Float64, E2::Float64, k::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.005208333333333333*(36*h^2*k*χ0*E1^2 + 24*h^2*k*λ0*E1^2*v1^2 - 60*h^2*k*χ0*E1^2*v1^2 - 48*h^2*k*λ0*E1^2*v1^4 + 12*h^2*k*χ0*E1^2*v1^4 + 24*h^2*k*λ0*E1^2*v1^6 + 12*h^2*k*χ0*E1^2*v1^6 - 192*h^2*k*E1*sqrt(1 - v1^2)*ε1^1.25 + 320*h^2*k*E1*v1^2*sqrt(1 - v1^2)*ε1^1.25 - 64*h^2*k*E1*v1^4*sqrt(1 - v1^2)*ε1^1.25 - 64*h^2*k*E1*v1^6*sqrt(1 - v1^2)*ε1^1.25 + 16*(k*(v1m2 - 4*v1m1 + 3*v1)^2*(4*η0 - 3*λ0 - 4*χ0 + (16*η0 - 21*λ0 - 16*χ0)*v1^2 - 6*λ0*v1^4) + 2*h*k*v1*(v1m2 - 4*v1m1 + 3*v1)*(16*η0 - 33*λ0 - 25*χ0 + 3*(8*η0 - 9*λ0 - 5*χ0)*v1^2)*V1 - 4*h^2*k*(3*(2*λ0 + χ0) + 3*(-4*η0 + 8*λ0 + 5*χ0)*v1^2 + 2*(-4*η0 + χ0)*v1^4)*V1^2 - 2*(1 - v1^2)*(h*k*(3*(λ0 + χ0) + (-8*η0 + 9*λ0 + 5*χ0)*v1^2)*(V1m2 - 4*V1m1 + 3*V1) + v1*(-2*k*(v1m3 - 4*v1m2 + 5*v1m1 - 2*v1)*(-4*η0 + 3*λ0 + 4*χ0 + 3*λ0*v1^2) - h^2*(3*(2*λ0 + χ0) + (-4*η0 + χ0)*v1^2)*(V0 - V2))))*ε1^2 - 128*h*k*(v1m2 - 4*v1m1 + 3*v1)*sqrt(1 - v1^2)*ε1^2.25 + 128*h*k*v1^4*(v1m2 - 4*v1m1 + 3*v1)*sqrt(1 - v1^2)*ε1^2.25 - 512*h^2*k*v1*sqrt(1 - v1^2)*V1*ε1^2.25 + 512*h^2*k*v1^3*sqrt(1 - v1^2)*V1*ε1^2.25 + 18*h*k*λ0*E1*v1*(ε1m2 - 4*ε1m1 + 3*ε1) + 42*h*k*χ0*E1*v1*(ε1m2 - 4*ε1m1 + 3*ε1) - 30*h*k*λ0*E1*v1^3*(ε1m2 - 4*ε1m1 + 3*ε1) - 78*h*k*χ0*E1*v1^3*(ε1m2 - 4*ε1m1 + 3*ε1) + 6*h*k*λ0*E1*v1^5*(ε1m2 - 4*ε1m1 + 3*ε1) + 30*h*k*χ0*E1*v1^5*(ε1m2 - 4*ε1m1 + 3*ε1) + 6*h*k*λ0*E1*v1^7*(ε1m2 - 4*ε1m1 + 3*ε1) + 6*h*k*χ0*E1*v1^7*(ε1m2 - 4*ε1m1 + 3*ε1) - 128*h*k*v1*sqrt(1 - v1^2)*ε1^1.25*(ε1m2 - 4*ε1m1 + 3*ε1) + 256*h*k*v1^3*sqrt(1 - v1^2)*ε1^1.25*(ε1m2 - 4*ε1m1 + 3*ε1) - 128*h*k*v1^5*sqrt(1 - v1^2)*ε1^1.25*(ε1m2 - 4*ε1m1 + 3*ε1) + 3*k*λ0*(ε1m2 - 4*ε1m1 + 3*ε1)^2 - 3*k*λ0*v1^2*(ε1m2 - 4*ε1m1 + 3*ε1)^2 + 12*k*χ0*v1^2*(ε1m2 - 4*ε1m1 + 3*ε1)^2 - 3*k*λ0*v1^4*(ε1m2 - 4*ε1m1 + 3*ε1)^2 - 24*k*χ0*v1^4*(ε1m2 - 4*ε1m1 + 3*ε1)^2 + 3*k*λ0*v1^6*(ε1m2 - 4*ε1m1 + 3*ε1)^2 + 12*k*χ0*v1^6*(ε1m2 - 4*ε1m1 + 3*ε1)^2 + 24*(1 - v1^2)*ε1*(3*h^2*χ0*(E0 - E2) + h*k*(λ0 + χ0)*(E1m2 - 4*E1m1 + 3*E1)*v1^5 - h*k*E1*((v1m2 - 4*v1m1 + 3*v1)*(λ0 + 7*χ0 + (-4*η0 + 11*λ0 + 9*χ0)*v1^2) + 4*h*v1*(5*λ0 + 7*χ0 + (-2*η0 + λ0 + χ0)*v1^2)*V1) - v1^4*(h^2*(2*λ0 + χ0)*(E0 - E2) + 2*k*(λ0 + 4*χ0)*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1)) + 2*k*λ0*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1) - 5*h*k*λ0*V1*(ε1m2 - 4*ε1m1 + 3*ε1) - 3*h*k*χ0*V1*(ε1m2 - 4*ε1m1 + 3*ε1) - k*v1*(h*(3*λ0 + 7*χ0)*(E1m2 - 4*E1m1 + 3*E1) - 2*(η0 - 2*λ0 - 3*χ0)*(v1m2 - 4*v1m1 + 3*v1)*(ε1m2 - 4*ε1m1 + 3*ε1)) + 2*k*v1^3*(h*(λ0 + 3*χ0)*(E1m2 - 4*E1m1 + 3*E1) - (λ0 + χ0)*(v1m2 - 4*v1m1 + 3*v1)*(ε1m2 - 4*ε1m1 + 3*ε1)) + v1^2*(2*h^2*(λ0 - χ0)*(E0 - E2) + 8*k*χ0*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1) + h*k*(4*η0 - 7*λ0 - 13*χ0)*V1*(ε1m2 - 4*ε1m1 + 3*ε1))))/(h^2*k*(1 - v1^2)^3.5*ε1^1.25)


stress_energy_gradient_x(v1::Float64, v1m1::Float64, v1m2::Float64, v1m3::Float64, ε1::Float64, ε1m1::Float64, ε1m2::Float64, ε1m3::Float64, V0::Float64, V1::Float64, V1m1::Float64, V1m2::Float64, E0::Float64,
E1::Float64, E1m1::Float64, E1m2::Float64, V2::Float64, E2::Float64, k::Float64, h::Float64, η0::Float64, λ0::Float64, χ0::Float64) = -0.005208333333333333*(12*h^2*k*E1^2*v1*(-1 + v1^2)^2*(λ0 + 4*χ0 + λ0*v1^2) + 2*h*k*E1*(1 - v1^2)*(12*v1*(v1m2 - 4*v1m1 + 3*v1)*(4*η0 - 7*λ0 - 13*χ0 - (5*λ0 + 3*χ0)*v1^2)*ε1 - 96*h*(λ0 + χ0 + (-η0 + 2*λ0 + 3*χ0)*v1^2)*V1*ε1 - 128*h*v1*sqrt(1 - v1^2)*ε1^1.25 + 128*h*v1^3*sqrt(1 - v1^2)*ε1^1.25 + 3*(1 - v1^2)*(λ0 + χ0 + (3*λ0 + 7*χ0)*v1^2)*(ε1m2 - 4*ε1m1 + 3*ε1)) - 24*h*k*v1^6*ε1*((3*λ0 + 7*χ0)*(E1m2 - 4*E1m1 + 3*E1) + 4*sqrt(1 - v1^2)*ε1^0.25*(ε1m2 - 4*ε1m1 + 3*ε1)) - 8*ε1*(3*h*k*(λ0 + χ0)*(E1m2 - 4*E1m1 + 3*E1) + 4*(2*k*(4*η0 - χ0)*(v1m3 - 4*v1m2 + 5*v1m1 - 2*v1) - 3*h^2*λ0*(V0 - V2))*ε1 - 4*h*k*V1*((8*η0 - 9*λ0 - 5*χ0)*(v1m2 - 4*v1m1 + 3*v1) - 8*h*sqrt(1 - v1^2)*ε1^0.25)*ε1 - 3*k*(2*η0 - λ0 - χ0)*(v1m2 - 4*v1m1 + 3*v1)*(ε1m2 - 4*ε1m1 + 3*ε1) + 4*h*k*sqrt(1 - v1^2)*ε1^0.25*(ε1m2 - 4*ε1m1 + 3*ε1)) + 8*v1^4*ε1*(3*h*k*(5*λ0 + 13*χ0)*(E1m2 - 4*E1m1 + 3*E1) - 4*(6*k*(2*λ0 + χ0)*(v1m3 - 4*v1m2 + 5*v1m1 - 2*v1) - h^2*(4*η0 - 3*λ0 - 4*χ0)*(V0 - V2))*ε1 - 8*h*k*V1*(3*(λ0 + χ0)*(v1m2 - 4*v1m1 + 3*v1) - 4*h*sqrt(1 - v1^2)*ε1^0.25)*ε1 + 3*k*(5*λ0 + 7*χ0)*(v1m2 - 4*v1m1 + 3*v1)*(ε1m2 - 4*ε1m1 + 3*ε1) + 20*h*k*sqrt(1 - v1^2)*ε1^0.25*(ε1m2 - 4*ε1m1 + 3*ε1)) - v1^3*(24*(h^2*(λ0 + 8*χ0)*(E0 - E2) + 2*k*(4*λ0 - χ0)*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1))*ε1 - 192*h^2*k*(4*η0 - 3*λ0 - 4*χ0)*V1^2*ε1^2 + 16*k*(9*(2*λ0 + χ0)*(v1m2 - 4*v1m1 + 3*v1)^2 + 4*h*(4*η0 - 3*λ0 - χ0)*(V1m2 - 4*V1m1 + 3*V1))*ε1^2 - 256*h*k*(v1m2 - 4*v1m1 + 3*v1)*sqrt(1 - v1^2)*ε1^2.25 + 48*h*k*(2*η0 - 5*λ0 - χ0)*V1*ε1*(ε1m2 - 4*ε1m1 + 3*ε1) + 3*k*(4*λ0 - χ0)*(ε1m2 - 4*ε1m1 + 3*ε1)^2) + 3*v1^7*(8*(h^2*λ0*(E0 - E2) + 6*k*χ0*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1))*ε1 + 3*k*χ0*(ε1m2 - 4*ε1m1 + 3*ε1)^2) + v1*(24*(h^2*(λ0 + 4*χ0)*(E0 - E2) + 2*k*(2*λ0 + χ0)*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1))*ε1 + 64*h^2*k*(8*η0 - 21*λ0 - 8*χ0)*V1^2*ε1^2 + 16*k*((20*η0 - 12*λ0 - 11*χ0)*(v1m2 - 4*v1m1 + 3*v1)^2 + 2*h*(8*η0 - 9*λ0 - 5*χ0)*(V1m2 - 4*V1m1 + 3*V1))*ε1^2 - 256*h*k*(v1m2 - 4*v1m1 + 3*v1)*sqrt(1 - v1^2)*ε1^2.25 + 24*h*k*(4*η0 - 11*λ0 - 9*χ0)*V1*ε1*(ε1m2 - 4*ε1m1 + 3*ε1) + 3*k*(2*λ0 + χ0)*(ε1m2 - 4*ε1m1 + 3*ε1)^2) - 8*v1^2*ε1*(3*h*k*(λ0 + 5*χ0)*(E1m2 - 4*E1m1 + 3*E1) - 16*(k*(2*η0 + 3*λ0 + χ0)*(v1m3 - 4*v1m2 + 5*v1m1 - 2*v1) - h^2*(η0 - χ0)*(V0 - V2))*ε1 + 4*h*k*sqrt(1 - v1^2)*ε1^0.25*(ε1m2 - 4*ε1m1 + 3*ε1) - 2*k*(v1m2 - 4*v1m1 + 3*v1)*(2*h*(32*η0 - 45*λ0 - 29*χ0)*V1*ε1 - 3*(η0 + 2*λ0 + 3*χ0)*(ε1m2 - 4*ε1m1 + 3*ε1))) + 3*v1^5*(32*h*k*(λ0 + χ0)*(V1m2 - 4*V1m1 + 3*V1)*ε1^2 + k*(2*λ0 - 5*χ0)*(ε1m2 - 4*ε1m1 + 3*ε1)^2 - 8*ε1*(h^2*(λ0 - 4*χ0)*(E0 - E2) - 2*k*(2*λ0 - 5*χ0)*(ε1m3 - 4*ε1m2 + 5*ε1m1 - 2*ε1) - h*k*(λ0 + 7*χ0)*V1*(ε1m2 - 4*ε1m1 + 3*ε1))))/(h^2*k*(1 - v1^2)^3.5*ε1^1.25)

end
end

end